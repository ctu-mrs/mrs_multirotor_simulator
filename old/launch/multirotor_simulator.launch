<launch>

  <arg name="debug" default="false" />
  <arg name="standalone" default="true" />
  <arg name="bond" default="$(optenv BOND true)" />
  <arg name="nodelet_manager_name" default="$(optenv NODELET_MANAGER)" />
  <arg name="use_sim_time" default="true" />
  <arg name="custom_config" default="" />

  <arg     if="$(arg bond)" name="bond_suffix" value="" />
  <arg unless="$(arg bond)" name="bond_suffix" value="--no-bond" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <node pkg="nodelet" type="nodelet" name="multirotor_simulator" args="$(arg nodelet) mrs_multirotor_simulator/MultirotorSimulator $(arg nodelet_manager) $(arg bond_suffix)" output="screen" launch-prefix="$(arg launch_prefix)">

    <param name="config" value="$(find mrs_multirotor_simulator)/config/multirotor_simulator.yaml" />
    <param name="config_uavs" value="$(find mrs_multirotor_simulator)/config/uavs.yaml" />

    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/f330.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/f450.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/f550.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/x500.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/t650.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/naki.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/a300.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/robofly.yaml" />

    <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/mixer.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/rate_controller.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/attitude_controller.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/velocity_controller.yaml" />
    <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/position_controller.yaml" />

    <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
    <param if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" name="custom_config" value="$(arg custom_config)" />
    <param if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" name="custom_config" value="$(env PWD)/$(arg custom_config)" />

    <remap from="~diagnostics_out" to="~diagnostics" />
    <remap from="~imu_out" to="~imu" />
    <remap from="~odom_out" to="~odom" />
    <remap from="~clock_out" to="/clock" />
    <remap from="~uav_poses_out" to="~uav_poses" />

  </node>

</launch>
